---
name: Vultr Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true

      function:
        type: choice
        description: "Select a function to build:"
        options:
          - das-atomdb
          - das-query-engine

env:
  FUNCTION_FOLDER: ${{ github.event.inputs.function }}
  VERSION: ${{ github.event.inputs.version }}

jobs:
  tag:
    uses: singnet/das-scripts-pipeline/.github/workflows/action.yml@master
    with:
      version: ${{ env.VERSION }}
      version-strategy: bump-version-from-variable-value
      job-image-namespace: trueagi
      job-image-version-semver: semantic-versioning
      main-branch: develop
      version-tag-regex-pattern: /^v\d+\.\d+\.\d+$/
      version-require-confirmation: "true"

  build-vultr-production:
    runs-on: ubuntu-latest
    needs: tag
    environment: production
    if: ${{ github.ref }} == refs/heads/master
    steps:
      - name: Setup OpenFaaS
        run: curl -sSL https://cli.openfaas.com | sudo -E sh

      - name: Checkout
        uses: actions/checkout@v4

      - name: Pull template
        run: faas-cli template pull https://github.com/singnet/das-openfaas-templates

      - name: Run shrinkwrap build
        run: |-
          FUNCTION_NAME=$(echo ${{ env.FUNCTION_PATH }} | sed 's/^das-//;s/-//g')
          faas-cli build --image trueagi/das:${{ env.VERSION }}-${FUNCTION_NAME} --name $FUNCTION_NAME --lang python3-http --handler ${{ env.FUNCTION_FOLDER }}

      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Image to Registry
        run: docker image push trueagi/das:${{ env.VERSION }}-${{ FUNCTION_NAME }}

  build-vultr-develop:
    runs-on: ubuntu-latest
    needs: tag
    if: ${{ github.ref }} == refs/heads/develop
    environment: develop
    steps:
      - name: Setup OpenFaaS
        run: curl -sSL https://cli.openfaas.com | sudo -E sh

      - name: Checkout
        uses: actions/checkout@v4

      - name: Pull template
        run: faas-cli template pull https://github.com/singnet/das-openfaas-templates

      - name: Run shrinkwrap build
        run: |-
          FUNCTION_NAME=$(echo ${{ env.FUNCTION_PATH }} | sed 's/^das-//;s/-//g')
          faas-cli build --image trueagi/das:${{ env.VERSION }}-${FUNCTION_NAME} --name $FUNCTION_NAME --lang python3-http --handler ${{ env.FUNCTION_FOLDER }}

      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Image to Registry
        run: docker image push trueagi/das:${{ env.VERSION }}-${{ FUNCTION_NAME }}
