---
name: Run Tests & Lint

on:
  workflow_call:

  pull_request:
    branches:
      - master

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ^3.10
          cache: "pip"

      - name: Install dependencies
        run: pip3 install -r requirements.txt

      - name: Check if the lint configuration matches the one in the DAS repository.
        run: |-
          config_files=(".black.cfg" ".flake8.cfg" ".isort.cfg")

          for config_file in "${config_files[@]}"; do
            master_lint=$(curl -s https://raw.githubusercontent.com/singnet/das/master/.lint/${config_file} | shasum -a 256 | cut -d ' ' -f 1)
            local_lint=$(shasum -a 256 ${config_file} | cut -d ' ' -f 1)

            if [ "$master_lint" != "$local_lint" ]; then
              echo "The local lint configuration differs from the one in the DAS repository."
              exit 1
            fi
          done

          echo "All lint configurations match the ones in the DAS repository."

      - name: Perform Code Linting
        run: make lint

  unit-tests:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ^3.10
          cache: "pip"

      - name: Install dependencies
        run: pip3 install -r das-query-engine/requirements.txt

      - name: Execute Unit Test Suite
        run: make unit-tests

  coverage:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ^3.10
          cache: "pip"

      - name: Install dependencies
        run: pip3 install -r das-query-engine/requirements.txt

      - name: Generate Coverage Report
        run: make unit-tests-coverage

  build-and-integration-test:
    if: ${{ github.ref_name != 'master' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ^3.10
          cache: "pip"

      - name: Install dependencies
        run: pip3 install -r das-query-engine/requirements.txt

      - name: Set dotenv
        run: echo ${{ secrets.ENV }} > .env

      - name: Perform Integration Testing
        run: make integration-tests

  integration-test-with-latest-image:
    if: ${{ github.ref_name == 'master' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ^3.10
          cache: "pip"

      - name: Install dependencies
        run: pip3 install -r das-query-engine/requirements.txt

      - name: Set dotenv
        run: |
          echo ${{ secrets.ENV }} > .env
          export $(xargs < .env)

      - name: Install das-cli
        run: |
          sudo bash -c "wget -O - http://45.77.4.33/apt-repo/setup.sh | bash"
          sudo apt install das-cli

      - name: Setup das-cli
        run: |
          das-cli config set <<EOF
          ${DAS_REDIS_PORT}
          n
          ${DAS_MONGODB_PORT}
          ${DAS_DATABASE_USERNAME}
          ${DAS_DATABASE_PASSWORD}
          n
          8888
          EOF
        
      - name: Start das-cli database
        run: das-cli db start

      - name: Load metta data
        run: das-cli metta load $(pwd)/examples/data/animals.metta

      - name: Perform Integration Testing
        run: python3 -m pytest -sx -vv das-query-engine/tests/integration
